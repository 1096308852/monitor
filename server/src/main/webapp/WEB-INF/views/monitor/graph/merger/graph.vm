<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<http://play.grafana.org/dashboard/db/graph-styles>
#include("/index/include.vm")
<style>
    .small-font{
        　　　  font-size:12px;
        -webkit-transform-origin-x: 0;
        -webkit-transform: scale(0.85);
        font-weight:100;
    }
    .small-td-font {
        font-size:12px;
        --webkit-transform-origin-x:0;
        --webkit-transform: scale(0.5);
    }

    .graph {
        height:260px;
        padding:4px;
        border:1px solid #404040;
    }

</style>
<script src="/static/js/plugins/echarts.js"></script>
<div id="container" style="margin-top: 20px;background-color:#141414;height:auto;margin-top:0px;">
</div>
<div id="image_all_id" style="margin-top: 20px;background-color:#141414;height:auto;margin-top:0px;overflow:hidden;">
</div>

<script>

    function toDecimal(x) {
        var f = parseFloat(x);
        if (isNaN(f)) {
            return 0.00;
        }
        f = Math.round(x*100)/100;
        return f;
    }

    function make_image_id(opts){
        _width = (opts["width"]) ? opts["width"] : 12
        _height = (opts["height"]) ? opts["height"] : 260
        id = opts["id"]
        write_html = '<div class="col-sm-'+_width+' graph"  id="'+id+'" style="height:'+_height+'"></div>'
        old_html = $("#image_all_id").html()
        if (old_html.indexOf('id="'+id+'"') == -1 ){
            console.log(write_html)
            $("#image_all_id").append(write_html)
        }
    }

    function getDatas(opts) {
        datas = new Array();
        names = opts["names"].split(",")
        currnet_time = new Date().getTime()
        last_time = parseInt(opts["last_time"])
        for(var j = 0; j <names.length ; j ++){
            name = names[j]
            d = {}
            d["name"] = name.replace(/SLASH/g,"/");
            d["data"] = eval(post({}, "/monitor/graph/historyData?ip="+opts["ip"]+"&name="+names[j]+"&type="+opts["groups"]));
            if(opts["calc"] || opts["last_time"]){
                new_data = new Array()
                for (i =0 ;i < d["data"].length; i++){
                    temp_data = new Array();
                    is_last_time = true
                    if(opts["last_time"] && (currnet_time - d["data"][i][0])  > last_time){
                        is_last_time = false

                    }
                    // 判断是否是最近指定时间的数据
                    if(is_last_time){
                        temp_data.push(d["data"][i][0])
                        if(opts["calc"]){
                            temp_data.push(toDecimal(eval(d["data"][i][1] + opts["calc"])))
                        }else{
                            temp_data.push(d["data"][i][1])
                        }
                        new_data.push(temp_data)
                    }
                }
                d["data"] = new_data
                datas.push(d)
            }else{
                datas.push(d)
            }
        }
        if(opts["alarm_base"]){
            dd = new Array();
            d = {}
            d["name"] = "报警基线"
            for(i =0 ;i < datas[0]["data"].length ; i++) {
                ddd = new Array()
                ddd.push(datas[0]["data"][i][0])
                ddd.push(opts["alarm_base"])
                dd.push(ddd)
            }
            d["data"] = dd
            d["color"] = "#FF0000"
            d["fillOpacity"] = 0.0
            d["lineWidth"] = 1.9
            datas.push(d)
        }
        return datas;
    }

    /**
     * Synchronize zooming through the setExtremes event handler.
     */
    function syncExtremes(e) {
        var thisChart = this.chart;

        if (e.trigger !== 'syncExtremes') { // Prevent feedback loop
            Echarts.each(Echarts.charts, function (chart) {
                if (chart !== thisChart) {
                    if (chart.xAxis[0].setExtremes) { // It is null while updating
                        chart.xAxis[0].setExtremes(e.min, e.max, undefined, false, {trigger: 'syncExtremes'});
                    }
                }
            });
        }
    }

    function graphAll(opt) {
        make_image_id(opt);
        if(opt["colors"]) {
            colors = opt["colors"]
        }else{
            colors =  ['#fAB839','#E26742', '#A5F78F', '#83CEDA','#ff0066', '#eeaaee', '#55BF3B', '#DF5353', '#7798BF', '#aaeeee', '#2b908f', '#90ee7e'];
        }
        startT = $('#startSendTime').val()
        endT = $('#endSendTime').val()
        if (!startT) {
            startT = ""
        }
        if (!endT) {
            endT = ""
        }
        Echarts.setOptions({
            global: {
                useUTC: false
            }
        });
        t = "&startT=" + startT + "&endT=" + endT;
        $('#'+opt["id"]).echarts({
            chart: {
                type: opt["chart"],
                zoomType: 'x',
                backgroundColor: '#1F1D1D',
            },
            colors: colors,
            title: {
                text: opt["ip"] +" " + opt["title"],
                style:{
                    color: '#ffffff',
                    fontSize: "14px",
                },
            },
            xAxis: {
                crosshair: true,
                type: 'datetime',
                tickPixelInterval: 75,
                gridLineWidth: 0.4,
                gridLineColor: '#e0e0e0',
                dashstyle : 'Solid',
                events: {
                    setExtremes: syncExtremes
                },
                valueSuffix: opt["units"],
                labels: {
                    style: {
                        color: '#ffffff'
                    }
                },
                lineColor: '#101010',
                lineWidth: 1,
                crosshair: {
                    width: 0.9,
                    color: 'red'
                }
            },
            yAxis: {
                title: {
                    text: ""
                },
                labels: {
                    style: {
                        color: '#ffffff'
                    },
                    format: "{value} " + opt["units"],
                },
                gridLineWidth: 0.4,
                tickPixelInterval: 28,
                gridLineColor: '#e0e0e0',
                //plotLines: [{
                //    value: 0,
                //    width: 0.1,
                //    color: '#ffffff',
                //    marker: {
                //        enabled: false
                //    },
                //    shadow: false,
                //}
                //]
            },

            legend: {
                enabled: opt["legend_show"],
                // verticalAlign: 'bottom',
                //floating: true,
                // y: 22,
                align: "left",
                //layout: 'vertical',
                //borderWidth: 0,
                itemStyle: {
                    color: '#e0e0e0',
                    fontWeight: '100'
                },
                itemHoverStyle :{
                    color: '#ffffff',
                },
                //itemMarginTop : 0.1,
                //itemMarginBottom: 1,
                symbolHeight: 8,
                symbolWidth: 22,
                symbolRadius: 0,
            },

            tooltip: {
                backgroundColor: '#1F1D1D',
                // 大开提示同时显示所有
                shared: opt["shared"],
                crosshairs: true,
                borderWdith:0,
                borderColor:"#1f1d1d",
                style: {
                    color: '#ffffff',
                    fontWeight: 'bold'
                },
                valueSuffix: opt["units"],
                useHTML: true,
                xDateFormat: '%Y-%m-%d %H:%M%S',
                headerFormat: '<div class="small-font"><small><b>{point.key}</b></small><table>',
                pointFormat: '<tr style="height:8px;overflow:hidden" nowrap><td style="height:5px;"><nobr><hr style="background-color: {series.color};margin:0px;width:14px;height:2px;" size="1"/></nobr></td><td>'+
                '&nbsp;{series.name}: </td>' +
                '<td style="text-align: right"><span style="margin-left:20px;"><b>{point.y}</b></span></td></tr>',
                footerFormat: '</table></div>',
            },

            plotOptions: {
                series: {
                    cursor: 'pointer',
                    point: {
                        events: {
                            click: function (e) {
                                hs.htmlExpand(null, {
                                    pageOrigin: {
                                        x: e.pageX || e.clientX,
                                        y: e.pageY || e.clientY
                                    },
                                    headingText: this.series.name,
                                    maincontentText: Echarts.dateFormat('%A, %b %e, %Y', this.x) + ':<br/> ' +
                                    this.y + ' visits',
                                    width: 200
                                });
                            }
                        }

                    },
                    marker: {
                        lineWidth: 0
                    }
                },
                series: {
                    lineWidth : 1.2,
                    fillOpacity: 0.15,
                    pointInterval: 10,
                    // 去掉小圆点
                    marker: {
                        enabled: opt["series_marker"],
                    }
                }
            },
            exporting: {
                enabled: false
            },
            series: getDatas(opt)
        });

    }


    opt = {
        groups : "Codis",
        names : "Codis_instantaneous_ops_per_sec,Codis_qps,Codis_alive",
        ip : "10.16.35.5",
        title :"Codis 访问量",
        chart : "area",
        id : "images_4",
        units : "",
        shared : true,
        legend_show: true,
        alarm_base : false,
        width: "12",
        height: "260px",
        series_marker: false,
        colors : ['#fAB839','#E26742', '#A5F78F', '#83CEDA',],
    }
    graphAll(opt)

    opt = {
        groups : "cpu",
        names : "system.cpu.system,system.cpu.user,system.cpu.iowait",
        ip : "10.16.35.5",
        title :"CPU使用",
        chart : "area",
        id : "images_2",
        units : "%",
        shared : false,
        alarm_base : 90,
        legend_show: false,
        series_marker: false,
        last_time : "14400000",
        width: "4",
        height: "260px",
        colors : ['#fAB839','#E26742', '#A5F78F', '#83CEDA',],
    }
    graphAll(opt)

    opt = {
        groups : "traffic",
        names : "system.net.bytes.rcvd.eth0,system.net.bytes.send.eth0",
        ip : "10.16.35.5",
        title :"网卡流量",
        chart : "area",
        id : "images_3",
        units : "Mib",
        calc : "/1024/1024",
        shared : true,
        legend_show: false,
        alarm_base : 10,
        width: "4",
        height: "260px",
        last_time : "4400000",
        series_marker: false,
        colors : ['#E26742', '#A5F78F', '#83CEDA',],
    }
    graphAll(opt)

    opt = {
        groups : "IO",
        names : "system.io.Blk_read.sda,system.io.Blk_wrtn.sda",
        ip : "10.16.35.5",
        title :"磁盘每秒读写",
        chart : "area",
        id : "images_7",
        shared : true,
        legend_show: true,
        units : "",
        alarm_base : "",
        last_time : "4400000",
        series_marker: false,
        width: "4",
        height: "260px",
        colors : ['#fAB839','#E26742', '#A5F78F', '#83CEDA',],
    }
    graphAll(opt)

    var ips = ["10.16.35.100", "10.16.35.90", "10.16.35.92", "10.16.35.88", "10.16.35.87", "10.16.35.86", "10.16.35.91", "10.16.25.92", "10.16.25.191", "10.16.35.22", "10.16.35.84", "10.16.35.89", "10.16.35.43"]
    for (xi = 0 ;xi<ips.length ; xi++){
        console.log(ips[xi])
        opt = {
            groups : "traffic",
            names : "system.net.bytes.rcvd.eth0,system.net.bytes.send.eth0",
            ip : ips[xi],
            title :"网络流量",
            chart : "area",
            id : "images_"+ips[xi].replace(/\./g, ""),
            units : "Mib",
            calc : "/1024/1024",
            shared : true,
            legend_show: true,
            alarm_base : "",
            last_time : "1400000",
            series_marker: false,
            width: "3",
            height: "260px",
            colors : ['#fAB839', '#A5F78F', '#83CEDA',],
        }
        graphAll(opt)
    }

    window.onload = function() {
        document.body.style.backgroundColor="#141414";
    }
</script>